[tool.poetry]
name = "slacker"
version = "2.0.0"
description = "Slack bot for managing PR reviews"
authors = ["Nigel Williams <nigel.williams@marketplacer.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
alembic = "^1.9.2"
flask = "^2.2.2"
psycopg2 = "^2.9.5"
pygithub = "^1.57"
python-dotenv = "^0.21.0"
slack-sdk = "^3.19.5"
sqlalchemy = "^2.0.0rc2"

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
coverage = "^7.2.2"
mypy = "^0.991"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pytest-dotenv = "^0.5.2"
requests-mock = "^1.10.0"
time-machine = "^2.9.0"
bandit = {extras = ["toml"], version = "^1.7.5"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
source = ["."]
omit = [
    # __main__ is special and the code is run at import time, so
    # executing it under pytest is a PITA
    "**/__main__.py"
    ]

[tool.coverage.report]
exclude_also = [
    # abstract methods will never get executed (but the body of
    # ... gets marked as never getting run unless we exclude them)
    "@(abc\\.)?abstractmethod",
    # __repr__ is for printing objects in a debugger or on a console,
    # it's not something that will be done in test cases.
    "def __repr__()",
    ]

[tool.bandit]
